@page
@using Microsoft.AspNetCore.Identity
@model ProjectMiniBlog.Pages.Posts.DetailsModel
@inject SignInManager<IdentityUser> SignInManager


@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.DateCreated)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.DateCreated)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Post.OwnerId)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Post.OwnerId)
        </dd>
    </dl>
    <p>Added tags:</p>
    <ul>
        @foreach (var postTag in Model.Post.PostTags)
        {
            <li ="@postTag.Tag.Id">@postTag.Tag.Name</li>
        }
    </ul>
</div>
<div>
    @if (SignInManager.IsSignedIn(User))
    {
        <a asp-page="./Edit" asp-route-id="@Model.Post?.Id">Edit</a>
        <a asp-page="./Index">Back to List</a>
    }
    else
    {
        <a asp-page="../Index">Back to posts</a>
    }
</div>
